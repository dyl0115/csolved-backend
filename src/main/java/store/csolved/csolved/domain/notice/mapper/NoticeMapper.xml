<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="store.csolved.csolved.domain.notice.mapper.NoticeMapper">

    <!-- 공지사항 상세 -->
    <resultMap id="noticeDetailResultMap" type="store.csolved.csolved.domain.notice.mapper.record.NoticeDetailRecord">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="authorId" column="author_id"/>
        <result property="authorNickname" column="author_nickname"/>
        <result property="content" column="content"/>
        <result property="views" column="views"/>
        <result property="createdAt" column="created_at"/>
        <result property="modifiedAt" column="modified_at"/>
    </resultMap>

    <!-- 공지사항 카드 -->
    <resultMap id="noticeCardResultMap" type="store.csolved.csolved.domain.notice.mapper.record.NoticeCardRecord">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="authorId" column="author_id"/>
        <result property="authorNickname" column="author_nickname"/>
        <result property="views" column="views"/>
        <result property="createdAt" column="created_at"/>
        <result property="modifiedAt" column="modified_at"/>
    </resultMap>

    <insert id="saveNotice" useGeneratedKeys="true" keyProperty="id">
        insert into notice(title, content, author_id, is_pinned)
        values (#{title},
                #{content},
                #{authorId},
                #{isPinned});
    </insert>

    <update id="updateNotice">
        update notice
        set title       = #{notice.title},
            content     = #{notice.content},
            is_pinned   = #{notice.isPinned},
            modified_at = current_timestamp
        where id = #{noticeId};
    </update>

    <update id="deleteNotice">
        update notice
        set deleted_at = current_timestamp
        where id = #{noticeId};
    </update>

    <select id="getNotice" resultMap="noticeDetailResultMap">
        select n.id          id,
               n.title       title,
               u.id          author_id,
               u.nickname    author_nickname,
               n.content     content,
               n.views       views,
               n.created_at  created_at,
               n.modified_at modified_at
        from notice n
                 left join users u on n.author_id = u.id
        where n.id = #{noticeId}
          and n.deleted_at is null;
    </select>

    <select id="getNotices" resultMap="noticeCardResultMap">
        SELECT
        n.id id,
        n.title title,
        n.author_id author_id,
        u.nickname author_nickname,
        n.views views,
        n.created_at created_at,
        n.modified_at modified_at
        FROM notice n
        LEFT JOIN users u on u.id = n.author_id
        WHERE n.deleted_at IS NULL
        <if test="search.searchType == 'TITLE' and
                  search.searchKeyword != null and
                  search.searchKeyword != ''">
            AND n.title LIKE concat('%', #{search.searchKeyword}, '%')
        </if>
        ORDER BY
        n.created_at desc
        LIMIT #{page.offset}, #{page.size}
    </select>

    <select id="countNotices">
        select count(n.id)
        from notice n
        where n.deleted_at is null
        <if test="search.searchType == 'TITLE' and
                  search.searchKeyword != null and
                  search.searchKeyword != ''">
            and n.title like concat('%', #{search.searchKeyword}, '%')
        </if>
    </select>

    <update id="increaseView">
        update notice
        set views = views + 1
        where id = #{noticeId};
    </update>
</mapper>